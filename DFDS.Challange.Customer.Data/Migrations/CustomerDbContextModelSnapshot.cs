// <auto-generated />
using DFDS.Challange.Customer.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DFDS.Challange.Customer.Data.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    partial class CustomerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DFDS.Challange.Customer.Data.tb_Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("NationalityRef")
                        .HasColumnType("int");

                    b.Property<int>("StatusRef")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("NationalityRef");

                    b.HasIndex("StatusRef");

                    b.ToTable("tb_Customer", "dbo");
                });

            modelBuilder.Entity("DFDS.Challange.Customer.Data.tb_Nationality", b =>
                {
                    b.Property<int>("NationalityRef")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalityRef");

                    b.ToTable("tb_Nationality", "dbo");
                });

            modelBuilder.Entity("DFDS.Challange.Customer.Data.tb_Status", b =>
                {
                    b.Property<int>("StatusRef")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusRef");

                    b.ToTable("tb_Status", "dbo");
                });

            modelBuilder.Entity("DFDS.Challange.Customer.Data.tb_Customer", b =>
                {
                    b.HasOne("DFDS.Challange.Customer.Data.tb_Nationality", "NationalityRefNavigation")
                        .WithMany("tb_Customer")
                        .HasForeignKey("NationalityRef")
                        .HasConstraintName("FK_tb_Customer_tb_Status")
                        .IsRequired();

                    b.HasOne("DFDS.Challange.Customer.Data.tb_Status", "StatusRefNavigation")
                        .WithMany("tb_Customer")
                        .HasForeignKey("StatusRef")
                        .HasConstraintName("FK_tb_Customer_tb_Nationality")
                        .IsRequired();

                    b.Navigation("NationalityRefNavigation");

                    b.Navigation("StatusRefNavigation");
                });

            modelBuilder.Entity("DFDS.Challange.Customer.Data.tb_Nationality", b =>
                {
                    b.Navigation("tb_Customer");
                });

            modelBuilder.Entity("DFDS.Challange.Customer.Data.tb_Status", b =>
                {
                    b.Navigation("tb_Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
